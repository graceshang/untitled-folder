ks.test(xplusy,cdf)
sample.x<-sample(c(-1:1),10,prob2,replace=T)
qqplot(xmar,sample.x)
ks.test(xmar,sample.x)
qqplot(ymar,cdf2)
sample.y<-sample(c(-1:1),10,prob2,replace=T)
qqplot(ymar,sample.y)
ks.test(ymar,sample.y)
xmar<-NULL
ymar<-NULL
xplusy<-NULL
for(n in 1:1000)
{   r <- runif(1) #draw a random numer from U(0,1)
# calculate the row in the random table
row <- len + 1 - sum(as(r<cdf,"integer"))
#
x <- ds[row, ]$x
y <- ds[row, ]$y
xmar<-c(xmar,x)
ymar<-c(ymar,y)
xplusy <-c(xplusy,x+y)
}
hist(xmar)
hist(ymar)
hist(xplusy)
qqplot(xplusy,cdf)
n=1000
sample.xy<-sample(c(-2:2), n, c(1/12,3/12,5/12,1/12,2/12), replace=T)
qqplot(xplusy,sample.xy)
ks.test(xplusy,sample.xy)
ks.test(xplusy,cdf)
qqplot(xplusy,cdf)
qqplot(xmar,cdf2)
ks.test(xmar,cdf2)
sample.x<-sample(c(-1:1),1000,prob2,replace=T)
sample.y<-sample(c(-1:1),1000,prob2,replace=T)
#plot and test
qqplot(xplusy,cdf)
ks.test(xplusy,cdf)
qqplot(xmar,sample.x)
ks.test(xmar,sample.x)
qqplot(ymar,sample.y)
ks.test(ymar,sample.y)
install.packages("foreign")
getwd()
rawdata <- read.dta("/Dropbox/ma consultants/civrightsnetwork_updated3_statav12.dta")
read.dta
?read.dta
library('foreign')
# Read in the STATA file
getwd()
rawdata <- read.dta("/Dropbox/ma consultants/civrightsnetwork_updated3_statav12.dta")
rawdata <- read.dta("Dropbox/ma consultants/civrightsnetwork_updated3_statav12.dta")
attach(rawdata)
install.packages("igraph")
library("igraph")
el <- cbind(as.character(opin_id),as.character(precID))
g <- graph.edgelist(el,directed=TRUE)
g
plot(g,vertex.size=3,vertex.label=NA,edge.arrow.size=0.3)
detach(rawdata)
head(rawdata)
X<- c(20:50)
X<- c(20:49)
X<- c(20:109)
X<- c(20:119)
m<-median(x)
x<- c(20:119)
m<-median(x)
tboot<- for(i in 1:N){
xstar<- rnorm(100)
tboot[i]<-median(xstar)
}
tboot<- for(i in 1:100){
xstar<- rnorm(100)
tboot[i]<-median(xstar)
}
tboot<-(R=100)
tboot<-length(x)
tboot<- for(i in 1:100){
xstar<- rnorm(100)
tboot[i]<-median(xstar)
}
se<- sqrt(var(tboot))
}
samplemedia<-function(x,d){
return(median(x[d]))
}
samplemedian<-function(x,d){
return(median(x[d]))
}
b=boot(x,samplemedian,R=1000)
b<-boot(x,samplemedian,R=1000)
library(boot)
b<-boot(x,samplemedian,R=1000)
b
t
median(x)
tboot<-rnorm(1000)
tboot<-rnorm(1000)
for(i in 1:1000){
xstar<-sample(x,rep=T,R=1000)
tboot[i]<-median(xstar)
}
tboot<-rnorm(1000)
for(i in 1:1000){
xstar<-sample(x,rep=T)
tboot[i]<-median(xstar)
}
se<-sqrt(var(tboot))
print(sd(b$t[,1]))
plot(b)
se<-sqrt(var(tboot))
se
xstar<-sample(x,rep=T,1000)
tboot[i]<-median(xstar)
for(i in 1:1000){
xstar<-sample(x,rep=T,1000)
tboot[i]<-median(xstar)
}
se<-sqrt(var(tboot))
se
print(se(b$t[,1]))
print(sqrt(var(b$t[,1]))
print(sqrt(var(b$t[,1])))
print(sqrt(var(b$t[,1])))
print(sd(b$t[,1]))
ci = boot.ci(b, type="basic")
ci = boot.ci(tboot,conf=0.90, type="basic")
ci = boot.ci(tboot,conf=0.90,type="basic")
ci<- boot.ci(tboot,conf=0.90,type="basic")
boot.ci(tboot,conf=0.90,type="basic")
tboot<-rnorm(1000)
for(i in 1:1000){
xstar<-sample(x,rep=T,1000)
tboot[i]<-median(xstar)
}
boot.ci(tboot,conf=0.90,type="basic")
se
boot.ci(tboot,conf=0.90,type=c("basic","norm","perc"))
boot.ci(tboot,conf=0.90,type=c("basic","norm","perc"))
boot.ci(b,conf=0.90,type=c("basic","norm","perc"))
se<-sqrt(var(b))
b<-boot(x,samplemedian,R=1000)
b
se<-sqrt(var(b))
print(sd(b$t[,1]))#1st column in it is the only thing
hsb2<-read.table("http://www.ats.ucla.edu/stat/data/hsb2.csv", sep=",", header=T)
f<-function(d,i){   #function with data and index
d2<-d[i,]        # the i row with all colunm within the row
return(cor(d2$write, d2$math))    #correlation of the
}
bootcorr<- boot(data,f,R=500)      #construct the distribution of corr(data$write,data$math) by the bootstrap
bootcorr<- boot(hsb2,f,R=500)      #construct the distribution of corr(data$write,data$math) by the bootstrap
boot.ci(bootcorr, conf=.9, type=c("basic","norm","perc"))
plot(bootcorr)
plot(bootcorr)
plot(b)
head(hsb2)
attach(hsb2)
x1<-hsb2$write
x2<-hsb2$math
n1<-length(x1)
n2<-length(x2)
th.hat<-median(x2)-median(x1)
B<-1000
tboot<-rnorm(1000)
for(i in 1:B){
xx1<-sample(x1,rep=T,n1)
xx2<-sample(x2,rep=T,n2)
tboot[i]<-median(xx2)-median(xx1)
}
se<-sqrt(variance(tboot))
se<-sqrt(var(tboot))
se
Normal<-(th.hat-2*se,th.hat+2*se)
Normal<-(th.hat-2*se, th.hat+2*se)
boot.ci(tboot,conf=0.95,type=c("basic","norm","perc"))
Normal<-(th.hat-2*se, th.hat+2*se)
th.hat<-median(x2)-median(x1)
Normal<-(th.hat-2*se, th.hat+2*se)
Normal<-(th.hat-2*se th.hat+2*se)
Normal<-(th.hat-2*se, th.hat+2*se)
Normal<-((th.hat-2*se), (th.hat+2*se))
percentile<-(quantile(tboot,.025).quantile(tboot,.975))
lsat<-c(576,635,558,578,666,580,555,661,651,605,653,575,545,572,594)
gpa<-(3.39,3.3,2.81,3.01,3.44,3.07,3.00,3.43,3.36,3.13,3.12,2.74,2.76,3.96)
gpa<-c(3.39,3.3,2.81,3.01,3.44,3.07,3.00,3.43,3.36,3.13,3.12,2.74,2.76,3.96)
gpa<-c(3.39,3.3,2.81,3.03,3.44,3.07,3.00,3.43,3.36,3.13,3.12,2.74,2.76,2.88,3.96)
gpa<-(3.39,3.3,2.81,3.03,3.44,3.07,3.00,3.43,3.36,3.13,3.12,2.74,2.76,2.88,3.96)
gpa<-c(3.39,3.3,2.81,3.03,3.44,3.07,3.00,3.43,3.36,3.13,3.12,2.74,2.76,2.88,3.96)
X<-data.frame(lsat,gpa)
X
f<-function(d,i){   #function with data and index
d2<-d[i,]        # the i row with all colunm within the row
return(cor(lsat, gpa))    #correlation of the
}
bootcorr<- boot(X,f,R=500)      #construct the distribution of corr(data$write,data$math) by the bootstrap
bootcorr
bcorr<- boot(X,f,R=1000)
bcorr
boot.ci(bcorr, conf=.9, type=c("basic","norm","perc"))
x<- rnorm(100)
t<-median(x)
samplemedian<-function(x,d){
return(median(x[d]))
}
b<-boot(x,samplemedian,R=1000)
plot(b)
print(sd(b$t[,1]))#1st column in it is the only thing being estimated by samplemedian(), which is the sample median.
print(sqrt(var(b$t[,1])))
boot.ci(b,conf=0.90,type=c("basic","norm","perc"))
tboot<-rnorm(1000)
for(i in 1:1000){
xstar<-sample(x,rep=T,1000)
tboot[i]<-median(xstar)
}
se<-sqrt(var(tboot))
se
B<-rnorm(1000)
bcorr<- boot(B,f,R=1000)
hsb2<-read.table("http://www.ats.ucla.edu/stat/data/hsb2.csv", sep=",", header=T)
f<-function(d,i){   #function with data and index
d2<-d[i,]        # the i row with all colunm within the row
return(cor(d2$write, d2$math))    #correlation of the
}
bootcorr<- boot(hsb2,f,R=500)      #construct the distribution of corr(data$write,data$math) by the bootstrap
boot.ci(bootcorr, conf=.9, type=c("basic","norm","perc"))
f<-function(d,i){   #function with data and index
return(cor(lsat, gpa))    #correlation of the
}
bcorr<- boot(X,f,R=1000)
bcorr
boot.ci(bcorr, conf=.95, type=c("basic","norm","perc"))
data<-rnorm(1000)
bcorr<- boot(data,f,R=1000)
bcorr
boot.ci(bcorr, conf=.95, type=c("basic","norm","perc"))
bcorr<- boot(X,f,R=1000)
bcorr
bcorr<- boot(data=cbind(lsat,gpa),f,R=1000)
bcorr
bcorr<- boot(X,f,R=1000)
bcorr
X<-cblind(lsat,gpa)
X<-cbind(lsat,gpa)
X
f<-function(d,i){   #function with data and index
return(cor(lsat, gpa))    #correlation of the
}
bcorr<- boot(X,f,R=1000)
bcorr  #???
cor(X)
library(bootstrap)
library(boot)
lsat<-c(576,635,558,578,666,580,555,661,651,605,653,575,545,572,594)
gpa<-c(3.39,3.3,2.81,3.03,3.44,3.07,3.00,3.43,3.36,3.13,3.12,2.74,2.76,2.88,3.96)
X<-cbind(lsat,gpa)
cor(X)
f<-function(d,i){   #function with data and index
return(cor(lsat, gpa))    #correlation of the
}
bcorr<- boot(X,f,R=1000)
bcorr  #???
class(X)
X<-data.frame(lsat,gpa)
cor(X)
f<-function(d,i){   #function with data and index
return(cor(lsat, gpa))    #correlation of the
}
bcorr<- boot(X,f,R=1000)
bcorr  #???
x<- rnorm(100)
t<-median(x)
samplemedian<-function(x,d){
return(median(x[d]))
}
b<-boot(x,samplemedian,R=1000)
plot(b)
#eg8.2
print(sd(b$t[,1]))#1st column in it is the only thing being estimated by samplemedian(), which is the sample median.
attach(hsb2)
x1<-hsb2$write
x2<-hsb2$math
n1<-length(x1)
n2<-length(x2)
th.hat<-median(x2)-median(x1)
B<-1000
tboot<-rnorm(1000)
for(i in 1:B){
xx1<-sample(x1,rep=T,n1)
xx2<-sample(x2,rep=T,n2)
tboot[i]<-median(xx2)-median(xx1)
}
se<-sqrt(var(tboot))
se
Normal<-(th.hat-2*se, th.hat+2*se)
Normal<-(th.hat-2*se, th.hat+2*se)
percentile<-(quantile(tboot,.025).quantile(tboot,.975))
placebo<-c(9243,9671,11792,13357,9055,6290,12412,18806)
old<-c(17649,12013,19979,21816,13850,9806,17208,29044)
new<-c(16449,14614,17274,23798,12560,10157,16570,26325)
old-plaebo<-old-placebo
old_plaebo<-old-placebo
old_placebo
old_placebo<-old-placebo
old_placebo
new_old<-new-old
new_old
data<-data.frame(placebo old new old_placebo new_old)
data<-data.frame(placebo,old,new,old_placebo,new_old)
data
plot(lsat,gpa)
plot(lsat,gpa)
plot(lsat,gpa)
plot(bcorr)
plot(b)
data
T<-mean(new_old)/mean(old_placebo)
T<-abs(mean(new_old)/mean(old_placebo))
lsat<-c(576,635,558,578,666,580,555,661,651,605,653,575,545,572,594)
gpa<-c(3.39,3.3,2.81,3.03,3.44,3.07,3.00,3.43,3.36,3.13,3.12,2.74,2.76,2.88,3.96)
X<-data.frame(lsat,gpa)
cor(X)
plot(lsat,gpa)
f<-function(d,i){
d2<-d[i,]
return(cor(d2$lsat,d2$gpa))
}
bcorr<- boot(X,f,R=1000)
bcorr  #???
boot.ci(bcorr, conf=.95, type=c("basic","norm","perc"))
T<-abs(mean(new_old)/mean(old_placebo))
tf<-function(d,i){
d2<-d[i,]
return(mean(d2$new_old,d2$old_placebo))
}
bmean<-boot(data,tf,R=1000)
tf<-function(d,i){
return(mean(d2$new_old,d2$old_placebo))
}
bmean<-boot(data,tf,R=1000)
tf<-function(d,i){
return(mean(data[new_old],data[old_placebo]))
}
bmean<-boot(data,tf,R=1000)
bmean<-boot(data,tf,R=1000)
tmean<-function(d,i){
return(mean(d[i])
}
tmean<-function(d,i){
return(mean(d[i])}
bmean<-boot(data,tmean,R=1000)
tmean<-function(d,i){
return(mean(d[i])
}
tmean<-function(x,d){
return(mean(x[d])
}
tmean<-function(d,i){
return(mean(d[i]))
}
bmean<-boot(data,tmean,R=1000)
tmean<-function(d,i){
return(mean(d[i]))
}
bmean<-boot(data,tmean,R=1000)
tmean<-function(x,d){
return(mean(x[d]))
}
bmean<-boot(data,tmean,R=1000)
attach(hsb2)
x1<-hsb2$write
x2<-hsb2$math
n1<-length(x1)
n2<-length(x2)
th.hat<-median(x2)-median(x1)
B<-1000
tboot<-rnorm(1000)
for(i in 1:B){
xx1<-sample(x1,rep=T,n1)
xx2<-sample(x2,rep=T,n2)
tboot[i]<-median(xx2)-median(xx1)
}
se<-sqrt(var(tboot))
se
for(i in 1:B){
x1<-sample(new_old,rep=T,8)
x2<-sample(old_placebo,rep=T,8)
tboot[i]<-mean(x1)/mean(x2)
}
tboot
boot.ci(tboot, conf=.95, type=c("basic","norm","perc"))
plot(tboot)
boot.ci(tboot, conf=.95, type=c("basic","norm","perc"))
for(i in 1:B){
x1<-sample(new_old,rep=T,8)
x2<-sample(old_placebo,rep=T,8)
mboot[i]<-mean(x1)/mean(x2)
}
plot(tboot)
se<-sqrt(var(mboot))
for(i in 1:B){
x1<-sample(new_old,rep=T,8)
x2<-sample(old_placebo,rep=T,8)
mboot[i]<-mean(x1)/mean(x2)
}
plot(mboot)
mboot<-rnorm(1000)
for(i in 1:B){
x1<-sample(new_old,rep=T,8)
x2<-sample(old_placebo,rep=T,8)
mboot[i]<-mean(x1)/mean(x2)
}
plot(mboot)
se<-sqrt(var(mboot))
se
boot.ci(mboot, conf=.95, type=c("basic","norm","perc"))
hist(mboot)
quantile(mboot,c(.5,.95))
boot.ci(mboot, conf=.95, type="basic")
mean(mboot)-1.96*sd(mboot)/sqrt(length(mboot))
ci.u <- mean(mboot)+qnorm(1-alpha/2)*sd(mboot)/sqrt(B)
ci.u <- mean(mboot)+qnorm(1-.05/2)*sd(mboot)/sqrt(B)
ci.l <- mean(mboot)-qnorm(1-.05/2)*sd(mboot)/sqrt(B)
theta_ture<-runif(1,0,1)
N=sample(seq(10000.40000),1)
N=sample(seq(100000,400000),1)
B=N-A
Zpop<-sample(c(rep(1,A),rep(0,B)))
A=round(tehta_true*N)
B=N-A
A=round(theta_true*N)
B=N-A
A=round(theta_true*N)
B=N-A
theta_true<-runif(1,0,1)
##genarate population
N=sample(seq(100000,400000),1)
A=round(theta_true*N)
B=N-A
Zpop<-sample(c(rep(1,A),rep(0,B)))
m=0.2
n=10
pr<-prior(m,n)
lk<-lielihood(N_samp,Y_samp)
po<-posterior(m,n,N_samp,Y_samp)
plot(pr,type="l",main="prior")
chol<-read.csv("plasma.csv", head="T")
chol<-read.csv(file.choose("plasma.csv"), head="T")
chol<-read.csv(file.choose("plasma.csv"))
head(chol)
names(chol)
x1<-X
x2<-X.1
attach(chol)
x1<-X
x2<-X.1
n1<-length(x1)
n2<-length(x2)
th<-median(x2)-median(x1)
B<-1000
tboot<-rnorm(1000)
for(i in 1:B){
xx1<-sample(x1,rep=T,n1)
xx2<-sample(x2,rep=T,n2)
tboot[i]<-median(xx2)-median(xx1)
}
se<-sqrt(var(tboot))
se
Normal<-c(th-2*se, th+2*se)
class(x1)
chol<-read.csv(file.choose("plasma.csv"),head=T)
attach(chol)
x1<-X
x2<-X.1
n1<-length(x1)
n2<-length(x2)
th<-median(x2)-median(x1)
X
chol<-read.csv(file.choose("plasma.csv"),head=T)
attach(chol)
x1<-X
X
chol<-read.csv(file.choose("plasma.csv"),head=T)
attach(chol)
names(chol)
choln<-as.numeric(chol)
choln<-as.numeric(chol[,1])
print(choln)
choln2<-as.numeric(chol[,2])
choln<-cbind(choln1,choln2)
choln1<-as.numeric(chol[,1])
choln2<-as.numeric(chol[,2])
choln<-cbind(choln1,choln2)
class(choln)
class(choln1)
x1<-choln1
x2<-choln2
n1<-length(x1)
n2<-length(x2)
th<-median(x2)-median(x1)
B<-1000
tboot<-rnorm(1000)
for(i in 1:B){
xx1<-sample(x1,rep=T,n1)
xx2<-sample(x2,rep=T,n2)
tboot[i]<-median(xx2)-median(xx1)
}
se<-sqrt(var(tboot))
se
th<-median(x2)-median(x1)
